var ParamsClass = function() {
    this.g = 3.0
    this.mass1 = 1.0
    this.mass2 = 1.0
    this.length1 = 5.0
    this.length2 = 5.0
    this.color1 = [255,194,0];
    this.color2 = [0,255,0];
    this.initphi1 = 0.1;
    this.initphi2 = 0.8;
    this.initvphi1 = 0.2;
    this.initvphi2 = 0.2;
    this.inittheta1 = 55;
    this.inittheta2 = 70;
    this.initvtheta1 = 0.9;
    this.initvtheta2 = 0.5;
    this.iters = 1000;
    this.dt = 0.0001;
    this.MAX_LINE_POINTS = 500;
    this.MAX_LINE_POINTS2 = 500;
    this.Go= function() {
    	initDoublePendulum();
    	trailj = params.MAX_LINE_POINTS
    	traili = 0;
			trailj2 = params.MAX_LINE_POINTS2
			traili2 = 0;
	    P1 = getDoublePendulumP1();
	    P2 = getDoublePendulumP2();
	    //mass1 line
	    for (var i = 0; i <= params.MAX_LINE_POINTS; i++) {
	        scene.children[1].geometry.vertices[i].x = P1[0];
	        scene.children[1].geometry.vertices[i].y = P1[2];
	        scene.children[1].geometry.vertices[i].z = -P1[1];
	        scene.children[2].geometry.vertices[i].x = P1[0];
	        scene.children[2].geometry.vertices[i].y = P1[2];
	        scene.children[2].geometry.vertices[i].z = -P1[1];
    	};
      for (var i = 0; i <= params.MAX_LINE_POINTS2; i++) {
        scene.children[3].geometry.vertices[i].x = P2[0];
        scene.children[3].geometry.vertices[i].y = P2[2];
        scene.children[3].geometry.vertices[i].z = -P2[1];
        scene.children[4].geometry.vertices[i].x = P2[0];
        scene.children[4].geometry.vertices[i].y = P2[2];
        scene.children[4].geometry.vertices[i].z = -P2[1];
      };
      scene.children[0].geometry.verticesNeedUpdate = true;
	    scene.children[1].geometry.verticesNeedUpdate = true;
	    scene.children[2].geometry.verticesNeedUpdate = true;
	    scene.children[3].geometry.verticesNeedUpdate = true;
	    scene.children[4].geometry.verticesNeedUpdate = true;
    };
}

var params = new ParamsClass();

function initSinglePendulum() {
	params.mass1 = 1.0;
	params.length1 = 10.0;
	theta1 = 1.0;
	phi1 = 0.0;
	vtheta1 = 0.0;
	vphi1 = 0.0;
}

function initDoublePendulum() {
	phi1    =  params.initphi1/360 *2* 3.141592;
  phi2    =  params.initphi2/360 *2* 3.141592;
  vphi1   =  params.initvphi1;
  vphi2   =  params.initvphi2;
  theta1  =  params.inittheta1/360 *2* 3.141592;
  theta2  =  params.inittheta2/360 *2* 3.141592;
  vtheta1 =  params.initvtheta1;
  vtheta2 =  params.initvtheta2;

  //try to avoid horrible singularities
  if(theta1 == 0) {
  	theta1 = 0.0001;
  }
  if(theta2 == 0) {
  	theta2 = 0.0001;
  }
   if(theta1 == 180) {
  	theta1 = 179.999;
  }
  if(theta2 == 180) {
  	theta2 = 189.999;
  }
}

function updateSinglePendulum() {
	F = rhsSinglePendulum();
	theta1 = theta1 + vtheta1*params.dt;
	phi1 = phi1 + vphi1*params.dt;
	vtheta1 = vtheta1 + F[0]*params.dt;
	vphi1 = vphi1 + F[1]*params.dt;
}

function updateDoublePendulum() {
	F = rhsDoublePendulum();
	theta1 = theta1 + vtheta1*params.dt;
	theta2 = theta2 + vtheta2*params.dt;
	phi1 = phi1 + vphi1*params.dt;
	phi2 = phi2 + vphi2*params.dt;
	vtheta1 = (vtheta1 + F[0]*params.dt);
	vtheta2 = (vtheta2 + F[1]*params.dt);
	vphi1 = (vphi1 + F[2]*params.dt);
	vphi2 = (vphi2 + F[3]*params.dt);
}

function getSinglePendulumP1() {
	return [params.length1*Math.sin(theta1)*Math.cos(phi1),params.length1*Math.sin(theta1)*Math.sin(phi1),-params.length1*Math.cos(theta1)];
}
function getDoublePendulumP1() {
	return [params.length1*Math.sin(theta1)*Math.cos(phi1),params.length1*Math.sin(theta1)*Math.sin(phi1),-params.length1*Math.cos(theta1)];
}
function getDoublePendulumP2() {
	P1 = getDoublePendulumP1()
	return [P1[0] + params.length2*Math.sin(theta2)*Math.cos(phi2),P1[1] + params.length2*Math.sin(theta2)*Math.sin(phi2),P1[2]-params.length2*Math.cos(theta2)];
}
function getSinglePendulumV() {
	v = [0,0];
	v[0] = params.length1*vtheta1;
	v[1] = params.length1*vphi1*Math.sin(theta1);
	return Math.sqrt(v[0]*v[0] + v[1]*v[1]);
}
function getDoublePendulumV1() {
	v = [0,0];
	v[0] = params.length1*vtheta1;
	v[1] = params.length1*vphi1*Math.sin(theta1);
	return Math.sqrt(v[0]*v[0] + v[1]*v[1]);
}
function getDoublePendulumV2() {
	v = [0,0];
	v[0] = params.length1*vtheta1 + params.length2*vtheta2;
	v[1] = params.length1*vphi1*Math.sin(theta1) + params.length2*vphi2*Math.sin(theta2);
	return Math.sqrt(v[0]*v[0] + v[1]*v[1]);
}
function getSinglePendulumE() {
	g = params.g
	P1 = getSinglePendulumP1();
	v = [0,0];
	v[0] = params.length1*vtheta1;
	v[1] = params.length1*vphi1*Math.sin(theta1);

	K = 0.5*params.mass1* (v[0]*v[0] + v[1]*v[1]);
	P = params.mass1*g*(P1[2]+10);
	return K+P;
}
function getDoublePendulumE() {
	g = params.g
	sintheta1 = Math.sin(theta1)
	sintheta2 = Math.sin(theta2)
	costheta1 = Math.cos(theta1)
	costheta2 = Math.cos(theta2)
	sinphi1   = Math.sin(phi1)
	sinphi2   = Math.sin(phi2)
	cosphi1   = Math.cos(phi1)
	cosphi2   = Math.cos(phi2)
	return 120-g*params.length1*params.mass1*costheta1 - (params.length1*costheta1 + params.length2*costheta2)*g*params.mass2 + 1/2*(params.length1*params.length1*sintheta1*sintheta1*vtheta1*vtheta1 + (params.length1*cosphi1*sintheta1*vphi1 + params.length1*costheta1*sinphi1*vtheta1)*(params.length1*cosphi1*sintheta1*vphi1 + params.length1*costheta1*sinphi1*vtheta1) + (params.length1*sinphi1*sintheta1*vphi1 - params.length1*cosphi1*costheta1*vtheta1)*(params.length1*sinphi1*sintheta1*vphi1 - params.length1*cosphi1*costheta1*vtheta1))*params.mass1 + 1/2*((params.length1*cosphi1*sintheta1*vphi1 + params.length2*cosphi2*sintheta2*vphi2 + params.length1*costheta1*sinphi1*vtheta1 + params.length2*costheta2*sinphi2*vtheta2)*(params.length1*cosphi1*sintheta1*vphi1 + params.length2*cosphi2*sintheta2*vphi2 + params.length1*costheta1*sinphi1*vtheta1 + params.length2*costheta2*sinphi2*vtheta2) + (params.length1*sinphi1*sintheta1*vphi1 + params.length2*sinphi2*sintheta2*vphi2 - params.length1*cosphi1*costheta1*vtheta1 - params.length2*cosphi2*costheta2*vtheta2)*(params.length1*sinphi1*sintheta1*vphi1 + params.length2*sinphi2*sintheta2*vphi2 - params.length1*cosphi1*costheta1*vtheta1 - params.length2*cosphi2*costheta2*vtheta2) + (params.length1*sintheta1*vtheta1 + params.length2*sintheta2*vtheta2)*(params.length1*sintheta1*vtheta1 + params.length2*sintheta2*vtheta2))*params.mass2;
}
function rhsSinglePendulum() {
	g = params.g
	dparams.dtheta1 = vphi1*vphi1*Math.sin(theta1)*Math.cos(theta1) - (g/params.length1)*Math.sin(theta1);
	if(theta1 == 0){
		ddphi1 = 0
	} else {
		ddphi1 = -2*vphi1*vtheta1*Math.cos(theta1)/Math.sin(theta1);
	}
	return [dparams.dtheta1,ddphi1];
}

function rhsDoublePendulum() {
	return [DPtheta1dotdot(),DPtheta2dotdot(),DPphi1dotdot(),DPphi2dotdot()];
}

function DPtheta1dotdot(){
	g = params.g
	sintheta1 = Math.sin(theta1)
	sintheta2 = Math.sin(theta2)
	costheta1 = Math.cos(theta1)
	costheta2 = Math.cos(theta2)
	sinphi1   = Math.sin(phi1)
	sinphi2   = Math.sin(phi2)
	cosphi1   = Math.cos(phi1)
	cosphi2   = Math.cos(phi2)
	return -(((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*sintheta2*sintheta2*sintheta2*vphi2*vphi2 + (((params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1 - (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (2*params.length1*params.mass1*cosphi1*cosphi1 - params.length1*params.mass1 - params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1 - (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (2*params.length1*params.mass1*cosphi1*cosphi1 - params.length1*params.mass1 - params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1 - (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (2*params.length1*params.mass1*cosphi1*cosphi1 - params.length1*params.mass1 - params.length1*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta1*sintheta1*vtheta1*vtheta1 - (((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2 - ((params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2*vphi1*vphi1 + 2*(params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2*vphi1*vphi1 + (params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2*vphi1*vphi1)*costheta1)*sintheta1)*costheta2*costheta2 - (((params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*vphi1*vphi1 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*vphi1*vphi1 + (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2*vphi1*vphi1 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*vphi1*vphi1)*sintheta1*sintheta1 - (((params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta1 - ((params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1)*vtheta1*vtheta1 - ((g*params.mass2*cosphi1*cosphi1*cosphi1 + g*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (g*params.mass2*cosphi1*cosphi1*sinphi1 + g*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (g*params.mass2*cosphi1*cosphi1*cosphi1 + g*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (g*params.mass2*cosphi1*cosphi1*sinphi1 + g*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1)*costheta2*sintheta2 - (((params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta2*sintheta1*vphi2*vphi2 - (2*params.length1*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1 - params.length1*params.mass1*cosphi1*cosphi1 + (2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 - params.length1*params.mass1 - params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1 - (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 - params.length1*params.mass1)*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*sintheta1*vtheta1*vtheta1 - (2*g*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2 - (g*params.mass1*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2 - (g*params.mass1*sinphi1*sinphi1 + (g*params.mass1 + g*params.mass2)*cosphi1*cosphi1)*sinphi2*sinphi2 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*vphi1*vphi1 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*vphi1*vphi1)*costheta1)*sintheta1)*sintheta2*sintheta2 - (((params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta2*costheta2*costheta2*sintheta1 - ((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*costheta2*sintheta2 + ((params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1 + params.length2*params.mass2*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta2*sintheta1*sintheta2*sintheta2 - ((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*sintheta2*sintheta2*sintheta2)*vtheta2*vtheta2)/(2*((params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*sintheta1*sintheta2 - (((params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta1*costheta1 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1)*costheta2*costheta2 - ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*costheta1 - (2*params.length1*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2 - (params.length1*params.mass1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2 - (params.length1*params.mass1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1)*sinphi2*sinphi2)*sintheta1*sintheta1)*sintheta2*sintheta2)
}

function DPtheta2dotdot(){
	g = params.g
	sintheta1 = Math.sin(theta1)
	sintheta2 = Math.sin(theta2)
	costheta1 = Math.cos(theta1)
	costheta2 = Math.cos(theta2)
	sinphi1   = Math.sin(phi1)
	sinphi2   = Math.sin(phi2)
	cosphi1   = Math.cos(phi1)
	cosphi2   = Math.cos(phi2)
	return (((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*sintheta1*sintheta2*sintheta2*vphi2*vphi2 - (((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*costheta2*sintheta1 - ((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*sintheta1*sintheta2*sintheta2 + (((params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2 - ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 - ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1 - 2*(params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2)*sinphi2*sinphi2)*costheta1*costheta1 + (2*params.length2*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2 - (params.length2*params.mass1*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2 - (params.length2*params.mass1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 - 2*((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2)*sinphi2*sinphi2)*sintheta1*sintheta1)*costheta2*sintheta2)*vtheta2*vtheta2 - ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*vphi1*vphi1 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*vphi1*vphi1 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2*vphi1*vphi1 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*vphi1*vphi1)*sintheta1*sintheta1*sintheta1 + (((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*sinphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*sinphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*sintheta1 + ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta1*sintheta1 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1*sintheta1)*vtheta1*vtheta1)*costheta2 + ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*vphi1*vphi1 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*vphi1*vphi1)*costheta1*sintheta1*sintheta1 + (((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 + ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*costheta1 + ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*costheta1*costheta1 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*sintheta1*sintheta1)*vtheta1*vtheta1 - (((params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta1*costheta1*vphi2*vphi2 + (((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1*vphi2*vphi2)*costheta2)*sintheta2)/(2*((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*sintheta1*sintheta2 - (((params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta1*costheta1 + (((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1)*costheta2*costheta2 - ((((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*costheta1 - (2*params.length2*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2 - (params.length2*params.mass1*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2 - (params.length2*params.mass1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1)*sinphi2*sinphi2)*sintheta1*sintheta1)*sintheta2*sintheta2)
}

function DPphi1dotdot() {
	g = params.g
	sintheta1 = Math.sin(theta1)
	sintheta2 = Math.sin(theta2)
	costheta1 = Math.cos(theta1)
	costheta2 = Math.cos(theta2)
	sinphi1   = Math.sin(phi1)
	sinphi2   = Math.sin(phi2)
	cosphi1   = Math.cos(phi1)
	cosphi2   = Math.cos(phi2)
	return ((((params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta1*vphi2*vphi2 + (params.length2*params.mass2*cosphi2*cosphi2*cosphi2*sinphi1 - params.length2*params.mass2*cosphi1*cosphi2*cosphi2*sinphi2 + params.length2*params.mass2*cosphi2*sinphi1*sinphi2*sinphi2 - params.length2*params.mass2*cosphi1*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1*vphi2*vphi2)*sintheta2*sintheta2*sintheta2 + 2*(((params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2*vphi1 + 2*(params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2*vphi1 + (params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2*vphi1)*costheta1*costheta1*costheta1 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2*vphi1 + 2*((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2*vphi1 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2*vphi1)*costheta1*sintheta1*sintheta1)*costheta2*costheta2*vtheta1 - (4*((params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*vphi1 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*vphi1 + (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2*vphi1 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*vphi1)*costheta1*costheta1*sintheta1*vtheta1 - ((params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*vphi1*vphi1 - (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*vphi1*vphi1 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2*vphi1*vphi1 - (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*vphi1*vphi1)*costheta1*sintheta1*sintheta1 - ((g*params.mass2*cosphi1*cosphi1*sinphi1 + g*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (g*params.mass2*cosphi1*cosphi1*cosphi1 + g*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (g*params.mass2*cosphi1*cosphi1*sinphi1 + g*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (g*params.mass2*cosphi1*cosphi1*cosphi1 + g*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta1 - (((params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta1*costheta1 + ((params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*sintheta1*sintheta1)*vtheta1*vtheta1)*costheta2*sintheta2 + ((params.length1*params.mass2*cosphi1*cosphi2*cosphi2*sinphi1*vphi1*vphi1 - params.length1*params.mass2*cosphi1*sinphi1*sinphi2*sinphi2*vphi1*vphi1 - (params.length1*params.mass2*cosphi1*cosphi1 - params.length1*params.mass2*sinphi1*sinphi1)*cosphi2*sinphi2*vphi1*vphi1)*sintheta1*sintheta1*sintheta1 + (g*params.mass2*cosphi1*cosphi2*cosphi2*sinphi1 - g*params.mass2*cosphi1*sinphi1*sinphi2*sinphi2 - (g*params.mass2*cosphi1*cosphi1 - g*params.mass2*sinphi1*sinphi1)*cosphi2*sinphi2)*costheta1*sintheta1 + ((params.length1*params.mass2*cosphi1*cosphi2*cosphi2*sinphi1 - params.length1*params.mass2*cosphi1*sinphi1*sinphi2*sinphi2 - (params.length1*params.mass2*cosphi1*cosphi1 - params.length1*params.mass2*sinphi1*sinphi1)*cosphi2*sinphi2)*costheta1*costheta1*sintheta1 + (params.length1*params.mass2*cosphi1*cosphi2*cosphi2*sinphi1 - params.length1*params.mass2*cosphi1*sinphi1*sinphi2*sinphi2 - (params.length1*params.mass2*cosphi1*cosphi1 - params.length1*params.mass2*sinphi1*sinphi1)*cosphi2*sinphi2)*sintheta1*sintheta1*sintheta1)*vtheta1*vtheta1 + 2*((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*vphi1 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*vphi1)*costheta1*costheta1*costheta1 - (2*params.length1*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2*vphi1 - (params.length1*params.mass1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*vphi1 - (params.length1*params.mass1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1)*sinphi2*sinphi2*vphi1)*costheta1*sintheta1*sintheta1)*vtheta1)*sintheta2*sintheta2 + ((((params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta1 + (params.length2*params.mass2*cosphi2*cosphi2*cosphi2*sinphi1 - params.length2*params.mass2*cosphi1*cosphi2*cosphi2*sinphi2 + params.length2*params.mass2*cosphi2*sinphi1*sinphi2*sinphi2 - params.length2*params.mass2*cosphi1*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1)*costheta2*costheta2*sintheta2 + (((params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta1 + (params.length2*params.mass2*cosphi2*cosphi2*cosphi2*sinphi1 - params.length2*params.mass2*cosphi1*cosphi2*cosphi2*sinphi2 + params.length2*params.mass2*cosphi2*sinphi1*sinphi2*sinphi2 - params.length2*params.mass2*cosphi1*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1)*sintheta2*sintheta2*sintheta2)*vtheta2*vtheta2)/(2*((params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*cosphi1 + params.length1*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length1*params.mass2*cosphi1*cosphi1*sinphi1 + params.length1*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*sintheta1*sintheta1*sintheta2 - (((params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length1*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length1*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length1*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta1*costheta1*sintheta1 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1*sintheta1)*costheta2*costheta2 - ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*costheta1*sintheta1 - (2*params.length1*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2 - (params.length1*params.mass1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2 - (params.length1*params.mass1*sinphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1)*sinphi2*sinphi2)*sintheta1*sintheta1*sintheta1)*sintheta2*sintheta2)
}

function DPphi2dotdot() {
	g = params.g
	sintheta1 = Math.sin(theta1)
	sintheta2 = Math.sin(theta2)
	costheta1 = Math.cos(theta1)
	costheta2 = Math.cos(theta2)
	sinphi1   = Math.sin(phi1)
	sinphi2   = Math.sin(phi2)
	cosphi1   = Math.cos(phi1)
	cosphi2   = Math.cos(phi2)
	return -((params.length2*params.mass2*cosphi1*cosphi2*cosphi2*sinphi1 - params.length2*params.mass2*cosphi1*sinphi1*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1 - params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*sinphi2)*sintheta1*sintheta1*sintheta2*sintheta2*sintheta2*vphi2*vphi2 + ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*vphi1*vphi1 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*vphi1*vphi1 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2*vphi1*vphi1 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*vphi1*vphi1)*sintheta1*sintheta1*sintheta1 + (((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*sinphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*sinphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*sintheta1 + ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta1*sintheta1 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1*sintheta1)*vtheta1*vtheta1)*costheta2*costheta2 + (((params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*sintheta1*vphi2*vphi2 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2*vphi1*vphi1 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*sinphi2*vphi1*vphi1)*sintheta1*sintheta1*sintheta1 + (((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*sinphi1 + (g*params.mass1 + g*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2 - ((g*params.mass1 + g*params.mass2)*cosphi1*cosphi1*cosphi1 + (g*params.mass1 + g*params.mass2)*cosphi1*sinphi1*sinphi1)*sinphi2)*costheta1*sintheta1 + ((((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*sinphi2)*costheta1*costheta1*sintheta1 + (((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*sinphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*sinphi1*sinphi1*sinphi1)*cosphi2 - ((params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*cosphi1*cosphi1 + (params.length1*params.mass1 + params.length1*params.mass2)*cosphi1*sinphi1*sinphi1)*sinphi2)*sintheta1*sintheta1*sintheta1)*vtheta1*vtheta1)*sintheta2*sintheta2 + (((params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*costheta2*costheta2*sintheta1 + (params.length2*params.mass2*cosphi1*cosphi2*cosphi2*sinphi1 - params.length2*params.mass2*cosphi1*sinphi1*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1 - params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*sinphi2)*costheta2*costheta2*sintheta1*sintheta1*sintheta2 + ((params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*sintheta1*sintheta2*sintheta2 + (params.length2*params.mass2*cosphi1*cosphi2*cosphi2*sinphi1 - params.length2*params.mass2*cosphi1*sinphi1*sinphi2*sinphi2 - (params.length2*params.mass2*cosphi1*cosphi1 - params.length2*params.mass2*sinphi1*sinphi1)*cosphi2*sinphi2)*sintheta1*sintheta1*sintheta2*sintheta2*sintheta2)*vtheta2*vtheta2 + 2*(2*((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*costheta2*sintheta1*sintheta2*vphi2 - (((params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta1*costheta1*vphi2 + (((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1*vphi2)*costheta2*costheta2*costheta2 - ((((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*costheta1*vphi2 - (2*params.length2*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2 - (params.length2*params.mass1*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2 - (params.length2*params.mass1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1)*sinphi2*sinphi2)*sintheta1*sintheta1*vphi2)*costheta2*sintheta2*sintheta2)*vtheta2)/(2*((params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*cosphi1 + params.length2*params.mass2*cosphi1*sinphi1*sinphi1)*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass2*cosphi1*cosphi1*sinphi1 + params.length2*params.mass2*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2)*costheta1*costheta2*sintheta1*sintheta2*sintheta2 - (((params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*(params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + (params.length2*params.mass1*cosphi1*cosphi1*cosphi1*cosphi1 + 2*params.length2*params.mass1*cosphi1*cosphi1*sinphi1*sinphi1 + params.length2*params.mass1*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*costheta1*costheta1 + (((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*cosphi2*cosphi2 + 2*((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2*sinphi2*sinphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*sinphi2*sinphi2*sinphi2*sinphi2)*sintheta1*sintheta1)*costheta2*costheta2*sintheta2 - ((((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*cosphi2*cosphi2 + ((params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*cosphi1*cosphi1 + 2*(params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1*sinphi1*sinphi1)*sinphi2*sinphi2)*costheta1*costheta1 - (2*params.length2*params.mass2*cosphi1*cosphi2*sinphi1*sinphi2 - (params.length2*params.mass1*cosphi1*cosphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*sinphi1*sinphi1)*cosphi2*cosphi2 - (params.length2*params.mass1*sinphi1*sinphi1 + (params.length2*params.mass1 + params.length2*params.mass2)*cosphi1*cosphi1)*sinphi2*sinphi2)*sintheta1*sintheta1)*sintheta2*sintheta2*sintheta2)
}